<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="utf-8">
  <title>Карта кофеен Санкт-Петербурга</title>
  <script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .header {
      background-color: #3c1b0b;
      color: white;
      padding: 15px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    
    .header h1 {
      font-size: 1.5rem;
      margin: 0;
    }
    
    .search-container {
      position: relative;
      width: 100%;
      max-width: 400px;
    }
    
    .search-box {
      width: 100%;
      padding: 10px 15px;
      border: none;
      border-radius: 20px;
      font-size: 1rem;
    }
    
    .filter-container {
      background-color: #f5f5f5;
      padding: 10px 20px;
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      border-bottom: 1px solid #ddd;
    }
    
    .filter-btn {
      background-color: white;
      border: 1px solid #ddd;
      border-radius: 20px;
      padding: 5px 15px;
      cursor: pointer;
      transition: all 0.3s;
    }
    
    .filter-btn:hover, .filter-btn.active {
      background-color: #3c1b0b;
      color: white;
    }
    
    .main-content {
      display: flex;
      flex: 1;
      height: calc(100vh - 130px);
    }
    
    .sidebar {
      width: 300px;
      background-color: white;
      border-right: 1px solid #ddd;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
    }
    
    .coffee-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .coffee-item {
      padding: 15px;
      border-bottom: 1px solid #eee;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    
    .coffee-item:hover {
      background-color: #f9f9f9;
    }
    
    .coffee-item.active {
      background-color: #f0e6d8;
    }
    
    .coffee-name {
      font-weight: bold;
      color: #3c1b0b;
      margin-bottom: 5px;
    }
    
    .coffee-address {
      font-size: 0.9rem;
      color: #666;
    }
    
    .coffee-rating {
      color: #ff9800;
      margin-top: 5px;
    }
    
    #map {
      flex: 1;
      height: 100%;
    }
    
    /* Стили для балуна */
    .ymaps-2-1-79-balloon__content {
      margin: 0;
      padding: 0;
    }
    
    .balloon-content {
      max-width: 300px;
      padding: 15px;
    }
    
    .balloon-header {
      font-size: 1.2rem;
      font-weight: bold;
      margin-bottom: 10px;
      color: #3c1b0b;
    }
    
    .balloon-address {
      color: #666;
      margin-bottom: 10px;
      font-size: 0.9rem;
    }
    
    .balloon-description {
      margin-bottom: 15px;
      line-height: 1.4;
    }
    
    .balloon-footer {
      display: flex;
      justify-content: space-between;
      margin-top: 15px;
    }
    
    .balloon-btn {
      background-color: #3c1b0b;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 4px;
      cursor: pointer;
    }
    
    .telegram-embed {
      width: 100%;
      height: 300px;
      border: none;
      margin: 10px 0;
    }
    
    .user-location-btn {
      position: absolute;
      right: 20px;
      bottom: 30px;
      background-color: white;
      border: none;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      box-shadow: 0 1px 5px rgba(0,0,0,0.3);
      cursor: pointer;
      z-index: 1000;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    
    @media (max-width: 768px) {
      .main-content {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        height: 200px;
        border-right: none;
        border-bottom: 1px solid #ddd;
      }
      
      .header {
        flex-direction: column;
        gap: 10px;
      }
      
      .search-container {
        max-width: 100%;
      }
      
      .filter-container {
        overflow-x: auto;
        flex-wrap: nowrap;
      }
    }
  </style>
</head>
<body>
  <div class="header">
    <h1><i class="fas fa-mug-hot"></i> Карта кофеен Санкт-Петербурга</h1>
    <div class="search-container">
      <input type="text" class="search-box" placeholder="Поиск кофеен...">
    </div>
  </div>
  
  <div class="filter-container">
    <button class="filter-btn active" data-filter="all">Все</button>
    <button class="filter-btn" data-filter="rating">Высокий рейтинг</button>
    <button class="filter-btn" data-filter="center">В центре</button>
    <button class="filter-btn" data-filter="with-food">С едой</button>
  </div>
  
  <div class="main-content">
    <div class="sidebar">
      <ul class="coffee-list">
        <!-- Список кофеен будет сгенерирован JavaScript -->
      </ul>
    </div>
    
    <div id="map"></div>
  </div>
  
  <button class="user-location-btn" title="Мое местоположение">
    <i class="fas fa-location-arrow"></i>
  </button>

  <script>
    ymaps.ready(init);

    let map;
    let coffeePlaces = [];
    let userMarker = null;

    // Данные о кофейнях
    const coffeeData = [
      {
        id: 1,
        name: "Tour Coffee",
        coordinates: [59.911946, 30.316499],
        address: "7-я Красноармейская ул., 5Д",
        description: "Tour coffee — это предвкушение каждый раз чего-то нового: разные сорта, разные обжарщики. Интересно пробовать и знать, что приготовят его хорошо. Здесь подают шикарные гриль-чизы и свежие десерты. И конечно же вкусный кофе.",
        telegramEmbed: "https://t.me/teplo_coffeeroutes/4?embed=1",
        rating: 4.8,
        tags: ["center", "with-food", "rating"]
      },
      {
        id: 2,
        name: "UNIC",
        coordinates: [59.960012, 30.311556],
        address: "ул. Кронверская, 12",
        description: "UNIC — место, куда хочется приходить — за вкусной едой, кофе и разговором с теми, кто по-настоящему увлечён своим делом.",
        telegramEmbed: "https://t.me/teplo_coffeeroutes/8?embed=1",
        rating: 4.7,
        tags: ["center", "with-food"]
      },
      {
        id: 3,
        name: "Coffee Room",
        coordinates: [59.935142, 30.320084],
        address: "наб. реки Фонтанки, 93",
        description: "Уютное место с отличным кофе и атмосферой, где можно поработать или просто отдохнуть.",
        telegramEmbed: "https://t.me/teplo_coffeeroutes/12?embed=1",
        rating: 4.5,
        tags: ["center"]
      },
      {
        id: 4,
        name: "Bonch Coffee",
        coordinates: [59.885614, 30.319235],
        address: "Боровая ул., 7",
        description: "Современная кофейня с собственным обжарочным производством и разнообразным меню.",
        telegramEmbed: "https://t.me/teplo_coffeeroutes/15?embed=1",
        rating: 4.9,
        tags: ["rating", "with-food"]
      }
    ];

    function init() {
      // Создаём карту
      map = new ymaps.Map("map", {
        center: [59.93, 30.34],
        zoom: 12,
        controls: ['zoomControl', 'geolocationControl']
      });

      // Добавляем метки кофеен
      addCoffeePlaces();
      
      // Создаем список кофеен в сайдбаре
      renderCoffeeList();
      
      // Инициализируем обработчики событий
      initEventHandlers();
      
      // Определение геопозиции
      locateUser();
    }

    function addCoffeePlaces() {
      coffeeData.forEach(coffee => {
        const placemark = new ymaps.Placemark(coffee.coordinates, {
          balloonContentHeader: coffee.name,
          balloonContentBody: `
            <div class="balloon-content">
              <div class="balloon-address">${coffee.address}</div>
              <div class="balloon-description">${coffee.description}</div>
              <div class="balloon-rating">Рейтинг: ${coffee.rating} ★</div>
              <iframe class="telegram-embed" src="${coffee.telegramEmbed}"></iframe>
            </div>
          `,
          balloonContentFooter: `
            <div class="balloon-footer">
              <button class="balloon-btn" onclick="routeTo(${coffee.coordinates[0]}, ${coffee.coordinates[1]})">Построить маршрут</button>
            </div>
          `
        }, {
          preset: 'islands#icon',
          iconColor: '#b84114'
        });
        
        // Сохраняем ссылку на метку и добавляем на карту
        coffeePlaces.push({
          id: coffee.id,
          placemark: placemark,
          data: coffee
        });
        
        map.geoObjects.add(placemark);
        
        // Событие при клике на метку
        placemark.events.add('click', function() {
          highlightCoffeeItem(coffee.id);
        });
      });
    }
    
    function renderCoffeeList() {
      const listContainer = document.querySelector('.coffee-list');
      listContainer.innerHTML = '';
      
      coffeeData.forEach(coffee => {
        const listItem = document.createElement('li');
        listItem.className = 'coffee-item';
        listItem.dataset.id = coffee.id;
        
        listItem.innerHTML = `
          <div class="coffee-name">${coffee.name}</div>
          <div class="coffee-address">${coffee.address}</div>
          <div class="coffee-rating">${'★'.repeat(Math.floor(coffee.rating))} ${coffee.rating}</div>
        `;
        
        listItem.addEventListener('click', function() {
          const coffeePlace = coffeePlaces.find(cp => cp.id === coffee.id);
          if (coffeePlace) {
            map.setCenter(coffeePlace.placemark.geometry.getCoordinates(), 16);
            coffeePlace.placemark.balloon.open();
            highlightCoffeeItem(coffee.id);
          }
        });
        
        listContainer.appendChild(listItem);
      });
    }
    
    function highlightCoffeeItem(id) {
      // Убираем выделение со всех элементов
      document.querySelectorAll('.coffee-item').forEach(item => {
        item.classList.remove('active');
      });
      
      // Выделяем выбранный элемент
      const selectedItem = document.querySelector(`.coffee-item[data-id="${id}"]`);
      if (selectedItem) {
        selectedItem.classList.add('active');
        
        // Прокручиваем список до выбранного элемента
        selectedItem.scrollIntoView({behavior: 'smooth', block: 'nearest'});
      }
    }
    
    function initEventHandlers() {
      // Обработчик поиска
      const searchBox = document.querySelector('.search-box');
      searchBox.addEventListener('input', function() {
        const searchText = this.value.toLowerCase();
        
        coffeePlaces.forEach(cp => {
          const coffeeName = cp.data.name.toLowerCase();
          const coffeeAddress = cp.data.address.toLowerCase();
          
          if (coffeeName.includes(searchText) || coffeeAddress.includes(searchText)) {
            cp.placemark.options.set('visible', true);
            document.querySelector(`.coffee-item[data-id="${cp.id}"]`).style.display = 'block';
          } else {
            cp.placemark.options.set('visible', false);
            document.querySelector(`.coffee-item[data-id="${cp.id}"]`).style.display = 'none';
          }
        });
      });
      
      // Обработчики фильтров
      document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
          this.classList.add('active');
          
          const filter = this.dataset.filter;
          applyFilter(filter);
        });
      });
      
      // Обработчик кнопки определения местоположения
      document.querySelector('.user-location-btn').addEventListener('click', function() {
        locateUser();
      });
    }
    
    function applyFilter(filter) {
      if (filter === 'all') {
        coffeePlaces.forEach(cp => {
          cp.placemark.options.set('visible', true);
          document.querySelector(`.coffee-item[data-id="${cp.id}"]`).style.display = 'block';
        });
        return;
      }
      
      coffeePlaces.forEach(cp => {
        if (cp.data.tags.includes(filter)) {
          cp.placemark.options.set('visible', true);
          document.querySelector(`.coffee-item[data-id="${cp.id}"]`).style.display = 'block';
        } else {
          cp.placemark.options.set('visible', false);
          document.querySelector(`.coffee-item[data-id="${cp.id}"]`).style.display = 'none';
        }
      });
    }
    
    function locateUser() {
      ymaps.geolocation.get({
        provider: 'browser',
        mapStateAutoApply: false
      }).then(function (res) {
        const coords = res.geoObjects.get(0).geometry.getCoordinates();
        addUserMarker(coords);
      }, function (err) {
        console.error("Ошибка геолокации:", err);
        alert("Не удалось определить ваше местоположение. Проверьте настройки геолокации.");
      });
    }

    function addUserMarker(coords) {
      // Удаляем предыдущий маркер, если он есть
      if (userMarker) {
        map.geoObjects.remove(userMarker);
      }
      
      userMarker = new ymaps.Placemark(coords, {
        balloonContent: 'Вы здесь'
      }, {
        preset: 'islands#circleIcon',
        iconColor: '#3399ff'
      });
      
      map.geoObjects.add(userMarker);
      map.setCenter(coords, 14, { duration: 500 });
    }
    
    function routeTo(lat, lon) {
      // В реальном приложении здесь будет логика построения маршрута
      alert(`Маршрут будет построен к координатам: ${lat}, ${lon}`);
    }
  </script>
</body>
</html>
